#!/usr/bin/env bash

BASH_DEBUG="${BASH_DEBUG:=}"
([ "${BASH_DEBUG}" == "true" ] || [ "${BASH_DEBUG}" == "1" ] ) && set -o xtrace
set -o errexit
set -o nounset
set -o pipefail
shopt -s dotglob
trap "exit" INT

# Directory where this script resides
THIS_DIR=$(cd $(dirname "${BASH_SOURCE[0]}"); pwd)

# Where the source code is
PROJECT_ROOT_DIR="$(realpath ${THIS_DIR}/../../..)"

source "${PROJECT_ROOT_DIR}/.env.example"
if [ -f "${PROJECT_ROOT_DIR}/.env" ]; then
  source "${PROJECT_ROOT_DIR}/.env"
fi


export AWS_PAGER=''
DATA_LOCAL_DIR="${PROJECT_ROOT_DIR}/${DATA_LOCAL_RELATIVE:-data_local}"
DATA_LOCAL_TMP_DIR="${PROJECT_ROOT_DIR}/data_local_tmp"

: "${DATA_AWS_S3_BUCKET:?The DATA_AWS_S3_BUCKET environment variable is required.}"
: "${DATA_AWS_CLOUDFRONT_DISTRIBUTION_ID:?The DATA_AWS_CLOUDFRONT_DISTRIBUTION_ID environment variable is required.}"


rm -rf "${DATA_LOCAL_TMP_DIR}"
mkdir -p "${DATA_LOCAL_TMP_DIR}"

rsync --archive -v --exclude='*.zip' "${DATA_LOCAL_DIR}/" "${DATA_LOCAL_TMP_DIR}/"

pushd "${DATA_LOCAL_TMP_DIR}" >/dev/null
  find . -type f ! -name '*.gz' -exec gzip -f "{}" \;
popd >/dev/null

aws s3 sync "${DATA_LOCAL_TMP_DIR}" "${DATA_AWS_S3_BUCKET}" --exclude "*" --include "*.gz" --content-encoding "gzip"

aws s3 sync "${DATA_LOCAL_DIR}" "${DATA_AWS_S3_BUCKET}" --exclude "*" --include "*.zip"

aws cloudfront create-invalidation --distribution-id "${DATA_AWS_CLOUDFRONT_DISTRIBUTION_ID}" --paths "/*" >/dev/null
